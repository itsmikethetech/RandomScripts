# Original script from https://www.reddit.com/r/PowerShell/comments/rlkacf/powershell_matrix_simulator/
# Optimized slightly and hosted by MikeTheTech

class Glyph {
    [int]$LastPosition
    [int]$CurrentPosition
    [int]$Velocity = 1
    [int]$Intensity
    [double]$IntensityChange
    [char]$Current
    [char]$Last
    
    Glyph() {
        $this.Setup()
    }

    [void]Setup() {
        $this.CurrentPosition = $script:rand.Next(-$script:ScreenHeight, [math]::Floor(0.6 * $script:ScreenHeight))
        $this.Intensity = 0
        $this.IntensityChange = $script:rand.Next(1, 20) / 100
        $this.Current = $script:PossibleGlyphs[$script:rand.Next($script:glyphCount)]
        $this.Last = $script:PossibleGlyphs[$script:rand.Next($script:glyphCount)]
    }

    [void]Move() {
        $this.LastPosition = $this.CurrentPosition
        $this.Intensity = [Math]::Min(255, $this.Intensity + [Math]::Floor(255 * $this.IntensityChange))
        $this.CurrentPosition += $this.Velocity
        $this.Last = $this.Current

        if ($this.Current -ne ' ') {
            $this.Current = $script:PossibleGlyphs[$script:rand.Next($script:glyphCount)]
        }

        # Reset if out of bounds
        if ($this.CurrentPosition -ge $script:ScreenHeight) {
            $this.Setup()
        }
    }
}

# Global variables setup
$script:rand = [System.Random]::new()
$script:ScreenWidth = $host.UI.RawUI.WindowSize.Width
$script:ScreenHeight = $host.UI.RawUI.WindowSize.Height
$script:PossibleGlyphs = "   +=1234567890!@#$%^&*()<>?{}[]<>~".ToCharArray()
$glyphCount = $script:PossibleGlyphs.Count
$script:e = [char]27

# Initialize glyph array
[Glyph[]]$AllGlyphs = [Glyph[]]::new($script:ScreenWidth)
for ($i = 0; $i -lt $AllGlyphs.Count; $i++) {
    $AllGlyphs[$i] = [Glyph]::new()
}

# Console settings
[Console]::CursorVisible = $false
$originalBG = [Console]::BackgroundColor
$originalFG = [Console]::ForegroundColor

# Clear screen with ANSI
Write-Host "$script:e[38;5;16m$script:e[48;5;16m$script:e[H$script:e[J" -NoNewline

$stopwatch = [System.Diagnostics.Stopwatch]::StartNew()

# Main loop
while (-not [System.Console]::KeyAvailable) {
    if ($stopwatch.Elapsed.TotalMilliseconds -gt 33.33) {
        for ($i = 0; $i -lt $script:ScreenWidth; $i++) {
            $glyph = $AllGlyphs[$i]
            $glyph.Move()

            if ($glyph.CurrentPosition -ge 0) {
                [Console]::SetCursorPosition($i, [Math]::Floor($glyph.CurrentPosition))
                [Console]::Write("$script:e[48;5;16m$script:e[38;5;15m$($glyph.Current)")
            }

            if ($glyph.LastPosition -ge 0) {
                [Console]::SetCursorPosition($i, [Math]::Floor($glyph.LastPosition))
                [Console]::Write("$script:e[48;5;16m$script:e[38;2;0;$($glyph.Intensity);0m$($glyph.Last)")
            }
        }
        $stopwatch.Restart()
    }
}

# Restore console settings
[Console]::BackgroundColor = $originalBG
[Console]::ForegroundColor = $originalFG

# Exit cleanup
$null = [Console]::ReadKey($true)
Clear-Host